@page "/qryitemdelete/{qryitemname}"

@inject ClientModel clientModel
@inject NavigationManager uriHelper

<MudAlert Severity="Severity.Normal">
    Confirm: Delete query item @QryItemName
</MudAlert>

@if (!string.IsNullOrEmpty(ErrorMessage) )
{
    <MudAlert Severity="Severity.Error">
        <MudText Color="@Color.Error">@ErrorMessage</MudText>
    </MudAlert>
}

<MudCard>
    <MudCardContent>
        <MudForm >
            <MudTextField T="string" @bind-Value="@queryItemEdit.Name" Label="Query name" Disabled="true" />
            <MudTextField T="string" @bind-Value="@queryItemEdit.Parent" Label="Parent" Disabled="true" />
            <MudTextField T="string" @bind-Value="@queryItemEdit.Label" Label="Label" Disabled="true" />
            <MudTextField T="string" @bind-Value="@queryItemEdit.Description" Label="Description" Lines="3" Disabled="true" />
            <MudTextField T="int" @bind-Value="@queryItemEdit.Pos" Label="Pos" InputType="InputType.Number" Disabled="true" />
            <MudTextField T="string" @bind-Value="@queryItemEdit.Sql" Label="Sql statement" Lines="10" Disabled="true" />
        </MudForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-1" OnClick="@HandleCancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-1" OnClick="@HandleSubmitAsync">Delete</MudButton>
    </MudCardActions>
</MudCard>

@code
{
    [Parameter]
    public string QryItemName { get; set; }
    public string QryItemParent { get; set; }

    public string ErrorMessage;
    private QueryItem queryItemEdit = new QueryItem();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            queryItemEdit = await clientModel.GatewayRestlessDb.FetchQueryItemAsync(QryItemName);
        }
        catch (HttpRequestException e)
        {
            ErrorMessage = e.Message;
        }
    }

    private async Task HandleSubmitAsync()
    {
        try
        {
            await clientModel.GatewayRestlessDb.DeleteQueryItemAsync(QryItemName);
            clientModel.InvalidateCaches();
            uriHelper.NavigateTo("/queryadmin");
        }
        catch (HttpRequestException e)
        {
            ErrorMessage = e.Message;
        }
    }

    private void HandleCancel()
    {
        uriHelper.NavigateTo("/queryadmin");
    }
}
