@page "/showquery/{queryitem}"
@using System.IO
@using System.Text
@using Newtonsoft.Json
@inject IJSRuntime JS
@inject ClientModel ClientModel

<HeaderRow Header="Query execution" SubHeader="Execute queries and download results in different formats" ErrorMessage=@ErrorMessage />

@if (QueryMetaData == null)
{
    <p><em>Loading Metadata...</em></p>
}
else
{
    <MudGrid Class="d-flex flex-row pa-2">
        <MudItem xs="12">
            <MudPaper Class="d-flex flex-column fillparent">
                <MudText Typo="Typo.subtitle1">@QueryMetaData.Label</MudText>
                <MudText Typo="Typo.subtitle2">@QueryMetaData.Description</MudText>
            </MudPaper>
        </MudItem>
        <MudItem sm="3" xs="12" Class="d-flex">
            <MudPaper Class="d-flex fillparent">
                <fieldset Class="fillparent">
                    <legend>Fetch size</legend>
                    <MudTextField T="int" @bind-Value="@Offset" Label="Offset" InputType="InputType.Number" />
                    <MudTextField T="int" @bind-Value="@MaxRows" Label="Max Rows" InputType="InputType.Number" />
                </fieldset>
            </MudPaper>
        </MudItem>

        @if (QueryMetaData.Parameters?.Count > 0)
        {
            <MudItem sm="3" xs="12" Class="d-flex">
                <MudPaper Class="d-flex fillparent">
                    <fieldset Class="fillparent">
                        <legend>Query Parameters</legend>
                        @{
                            foreach (var kvp in ParamValuesDict)
                            {
                                <MudTextField T="string" @bind-Value="@ParamValuesDict[kvp.Key]" Label="@kvp.Key" />
                            }
                        }
                    </fieldset>
                </MudPaper>
            </MudItem>
        }
        <MudItem sm="2" xs="12" Class="d-flex">
            <MudPaper Class="d-flex fillparent">
                <fieldset class="d-flex flex-column fillparent">
                    <legend>Table display</legend>
                    <MudSwitch @bind-Checked="@TableDisplayOptions.Hover" Color="Color.Primary">Hover</MudSwitch>
                    <MudSwitch @bind-Checked="@TableDisplayOptions.Dense" Color="Color.Secondary">Dense</MudSwitch>
                    <MudSwitch @bind-Checked="@TableDisplayOptions.Striped" Color="Color.Tertiary">Striped</MudSwitch>
                    <MudSwitch @bind-Checked="@TableDisplayOptions.Bordered" Color="Color.Warning">Bordered</MudSwitch>
                </fieldset>
            </MudPaper>
        </MudItem>
        <MudItem sm="3" xs="12" Class="d-flex">
            <MudPaper Class="d-flex fillparent">
                <fieldset class="d-flex flex-column fillparent">
                    <legend>Export</legend>
                    <MudSelect T="string" Label="Export format" AnchorOrigin="Origin.BottomCenter" @bind-Value="@ExportFormat">
                        @foreach (var format in ClientModel.FormatterInfos)
                        {
                            <MudSelectItem Value="@format.OutputFormat">@format.Name</MudSelectItem>
                        }
                    </MudSelect>
                    <div>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-1" bind-Disabled=@loading
                               OnClick=@(()=>@ExportQueryResultsAsync())>
                            @(loading ? "loading..." : "Export")
                        </MudButton>
                    </div>
                </fieldset>
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudPaper>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-1" @bind-Disabled=@loading OnClick=@(()=>@ShowQueryResultsAsync())>@(loading ? "loading..." : "Fetch results")</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
    <MudDivider DividerType="DividerType.Middle" Class="my-2" />


    <QueryResultTable @ref="queryResultTable" QueryResult=@QueryResult TableDisplayOptions=@TableDisplayOptions />
    @if (!loading)
    {
        @if (QueryResult != null && QueryResult.HasMoreRows)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-1" OnClick=@(()=>@FetchMoreRowsAndShow())>Fetch more</MudButton>
        }
        else
        {
            <MudText>All result rows fetched</MudText>
        }
    }
}